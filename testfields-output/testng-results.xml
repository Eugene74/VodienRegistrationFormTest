<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="3" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-23T15:30:06 EET" name="fields_validation_test" finished-at="2021-11-23T15:31:06 EET" duration-ms="59734">
    <groups>
    </groups>
    <test started-at="2021-11-23T15:30:06 EET" name="Address_check" finished-at="2021-11-23T15:31:06 EET" duration-ms="59734">
      <class name="fieldsvalidationtests.Address_check">
        <test-method is-config="true" signature="setup()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:06 EET" name="setup" finished-at="2021-11-23T15:30:09 EET" duration-ms="3213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupRegistrationPage()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:09 EET" name="setupRegistrationPage" finished-at="2021-11-23T15:30:09 EET" depends-on-methods="basepackage.BaseTest.setup" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegistrationPage -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:09 EET" name="refresh" finished-at="2021-11-23T15:30:09 EET" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldNegative(java.lang.String,boolean,java.lang.String)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:09 EET" name="checkNameFieldNegative" data-provider="testDataNegative" finished-at="2021-11-23T15:30:10 EET" duration-ms="779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[h]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[length<2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldNegative -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:10 EET" name="refresh" finished-at="2021-11-23T15:30:10 EET" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldNegative(java.lang.String,boolean,java.lang.String)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:10 EET" name="checkNameFieldNegative" data-provider="testDataNegative" finished-at="2021-11-23T15:30:21 EET" duration-ms="10677" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Aa!@#$%^&*()-_+=`~/\,.?><|b /ыйієж]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[special character]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [no some error message , value: Aa!@#$%^&*()-_+=`~/\,.?><|b /ыйієж] but found [3 no error message: special character]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [no some error message , value: Aa!@#$%^&*()-_+=`~/\,.?><|b /ыйієж] but found [3 no error message: special character]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at fieldsvalidationtests.Address_check.checkNameFieldNegative(Address_check.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldNegative -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:21 EET" name="refresh" finished-at="2021-11-23T15:30:21 EET" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldNegative(java.lang.String,boolean,java.lang.String)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:21 EET" name="checkNameFieldNegative" data-provider="testDataNegative" finished-at="2021-11-23T15:30:32 EET" duration-ms="10845" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[opvvcvcdufajpgsxkbfaftttficilxlfsfgseerwfrlhhonunvrvrcbexwooliovllxdsokgdmrrnopugscrrjupiwbbzxdwqcwm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[length100]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [no some error message , value: opvvcvcdufajpgsxkbfaftttficilxlfsfgseerwfrlhhonunvrvrcbexwooliovllxdsokgdmrrnopugscrrjupiwbbzxdwqcwm] but found [3 no error message: length100]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [no some error message , value: opvvcvcdufajpgsxkbfaftttficilxlfsfgseerwfrlhhonunvrvrcbexwooliovllxdsokgdmrrnopugscrrjupiwbbzxdwqcwm] but found [3 no error message: length100]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at fieldsvalidationtests.Address_check.checkNameFieldNegative(Address_check.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldNegative -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:32 EET" name="refresh" finished-at="2021-11-23T15:30:32 EET" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldNegative(java.lang.String,boolean,java.lang.String)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:32 EET" name="checkNameFieldNegative" data-provider="testDataNegative" finished-at="2021-11-23T15:30:42 EET" duration-ms="10667" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[検査]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[japanese]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [no some error message , value: 検査] but found [3 no error message: japanese]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [no some error message , value: 検査] but found [3 no error message: japanese]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at fieldsvalidationtests.Address_check.checkNameFieldNegative(Address_check.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldNegative -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:42 EET" name="refresh" finished-at="2021-11-23T15:30:42 EET" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldNegative(java.lang.String,boolean,java.lang.String)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:42 EET" name="checkNameFieldNegative" data-provider="testDataNegative" finished-at="2021-11-23T15:30:53 EET" duration-ms="10886" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[فحص]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[arabic]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [no some error message , value: فحص] but found [3 no error message: arabic]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [no some error message , value: فحص] but found [3 no error message: arabic]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at fieldsvalidationtests.Address_check.checkNameFieldNegative(Address_check.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldNegative -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:53 EET" name="refresh" finished-at="2021-11-23T15:30:53 EET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldPositive(java.lang.String,boolean)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:53 EET" name="checkNameFieldPositive" data-provider="testDataPositive" finished-at="2021-11-23T15:30:59 EET" duration-ms="5787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ivan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldPositive -->
        <test-method is-config="true" signature="refresh()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:59 EET" name="refresh" finished-at="2021-11-23T15:30:59 EET" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method signature="checkNameFieldPositive(java.lang.String,boolean)[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:30:59 EET" name="checkNameFieldPositive" data-provider="testDataPositive" finished-at="2021-11-23T15:31:05 EET" duration-ms="5748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc_12_def 12, kv 123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNameFieldPositive -->
        <test-method is-config="true" signature="cleanup()[pri:0, instance:fieldsvalidationtests.Address_check@3514a4c0]" started-at="2021-11-23T15:31:05 EET" name="cleanup" finished-at="2021-11-23T15:31:06 EET" duration-ms="1014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- fieldsvalidationtests.Address_check -->
    </test> <!-- Address_check -->
  </suite> <!-- fields_validation_test -->
</testng-results>
